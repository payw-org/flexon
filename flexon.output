Terminals which are not used

   Keyword
   Operator
   Delimiter
   Newline


Grammar

    0 $accept: program $end

    1 program: "mainprog" ID ';' declarations subprogram_declarations compound_statement

    2 declarations: /* empty */
    3             | type identifier_list ';' declarations

    4 identifier_list: ID
    5                | ID ',' identifier_list

    6 type: standard_type
    7     | standard_type '[' Integer ']'

    8 standard_type: "int"
    9              | "float"

   10 subprogram_declarations: /* empty */
   11                        | subprogram_declaration subprogram_declarations

   12 subprogram_declaration: subprogram_head declarations compound_statement

   13 subprogram_head: "function" ID arguments ':' standard_type ';'
   14                | "procedure" ID arguments ';'

   15 arguments: /* empty */
   16          | '(' parameter_list ')'

   17 parameter_list: identifier_list ':' type
   18               | identifier_list ':' type ';' parameter_list

   19 compound_statement: "begin" statement_list "end"

   20 statement_list: statement
   21               | statement ';' statement_list

   22 statement: variable '=' expression
   23          | print_statement
   24          | procedure_statement
   25          | compound_statement
   26          | if_statement
   27          | while_statement
   28          | for_statement
   29          | "return" expression
   30          | "nop"

   31 if_statement: "if" expression ':' statement elif_statement

   32 elif_statement: /* empty */
   33               | else_statement
   34               | "elif" expression ':' statement elif_statement

   35 else_statement: "else" ':' statement

   36 while_statement: "while" expression ':' statement
   37                | "while" expression ':' statement else_statement

   38 for_statement: "for" expression "in" expression ':' statement
   39              | "for" expression "in" expression ':' statement else_statement

   40 print_statement: "print"
   41                | "print" '(' expression ')'

   42 variable: ID
   43         | ID '[' expression ']'

   44 procedure_statement: ID '(' actual_parameter_expression ')'

   45 actual_parameter_expression: /* empty */
   46                            | expression_list

   47 expression_list: expression
   48                | expression ',' expression_list

   49 expression: simple_expression relop simple_expression

   50 simple_expression: term
   51                  | term addop simple_expression

   52 term: factor
   53     | factor multop term

   54 factor: Integer
   55       | Float
   56       | variable
   57       | procedure_statement
   58       | '!' factor
   59       | sign factor

   60 sign: '+'
   61     | '-'

   62 relop: '>'
   63      | ">="
   64      | '<'
   65      | "<="
   66      | "=="
   67      | "!="
   68      | "in"

   69 addop: '+'
   70      | '-'

   71 multop: '*'
   72       | '/'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 58
'(' (40) 16 41 44
')' (41) 16 41 44
'*' (42) 71
'+' (43) 60 69
',' (44) 5 48
'-' (45) 61 70
'/' (47) 72
':' (58) 13 17 18 31 34 35 36 37 38 39
';' (59) 1 3 13 14 18 21
'<' (60) 64
'=' (61) 22
'>' (62) 62
'[' (91) 7 43
']' (93) 7 43
error (256)
Integer (258) 7 54
Float (259) 55
Keyword (260)
Operator (261)
Delimiter (262)
Newline (263)
ID (264) 1 4 5 13 14 42 43 44
">=" (265) 63
"<=" (266) 65
"==" (267) 66
"!=" (268) 67
"in" (269) 38 39 68
NO_ELSE (270)
"elif" (271) 34
"else" (272) 35
"mainprog" (273) 1
"int" (274) 8
"float" (275) 9
"function" (276) 13
"procedure" (277) 14
"begin" (278) 19
"end" (279) 19
"return" (280) 29
"nop" (281) 30
"if" (282) 31
"while" (283) 36 37
"for" (284) 38 39
"print" (285) 40 41


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
declarations (48)
    on left: 2 3, on right: 1 3 12
identifier_list (49)
    on left: 4 5, on right: 3 5 17 18
type (50)
    on left: 6 7, on right: 3 17 18
standard_type (51)
    on left: 8 9, on right: 6 7 13
subprogram_declarations (52)
    on left: 10 11, on right: 1 11
subprogram_declaration (53)
    on left: 12, on right: 11
subprogram_head (54)
    on left: 13 14, on right: 12
arguments (55)
    on left: 15 16, on right: 13 14
parameter_list (56)
    on left: 17 18, on right: 16 18
compound_statement (57)
    on left: 19, on right: 1 12 25
statement_list (58)
    on left: 20 21, on right: 19 21
statement (59)
    on left: 22 23 24 25 26 27 28 29 30, on right: 20 21 31 34 35 36
    37 38 39
if_statement (60)
    on left: 31, on right: 26
elif_statement (61)
    on left: 32 33 34, on right: 31 34
else_statement (62)
    on left: 35, on right: 33 37 39
while_statement (63)
    on left: 36 37, on right: 27
for_statement (64)
    on left: 38 39, on right: 28
print_statement (65)
    on left: 40 41, on right: 23
variable (66)
    on left: 42 43, on right: 22 56
procedure_statement (67)
    on left: 44, on right: 24 57
actual_parameter_expression (68)
    on left: 45 46, on right: 44
expression_list (69)
    on left: 47 48, on right: 46 48
expression (70)
    on left: 49, on right: 22 29 31 34 36 37 38 39 41 43 47 48
simple_expression (71)
    on left: 50 51, on right: 49 51
term (72)
    on left: 52 53, on right: 50 51 53
factor (73)
    on left: 54 55 56 57 58 59, on right: 52 53 58 59
sign (74)
    on left: 60 61, on right: 59
relop (75)
    on left: 62 63 64 65 66 67 68, on right: 49
addop (76)
    on left: 69 70, on right: 51
multop (77)
    on left: 71 72, on right: 53


state 0

    0 $accept: . program $end

    "mainprog"  shift, and go to state 1

    program  go to state 2


state 1

    1 program: "mainprog" . ID ';' declarations subprogram_declarations compound_statement

    ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: "mainprog" ID . ';' declarations subprogram_declarations compound_statement

    ';'  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: "mainprog" ID ';' . declarations subprogram_declarations compound_statement

    "int"    shift, and go to state 6
    "float"  shift, and go to state 7

    $default  reduce using rule 2 (declarations)

    declarations   go to state 8
    type           go to state 9
    standard_type  go to state 10


state 6

    8 standard_type: "int" .

    $default  reduce using rule 8 (standard_type)


state 7

    9 standard_type: "float" .

    $default  reduce using rule 9 (standard_type)


state 8

    1 program: "mainprog" ID ';' declarations . subprogram_declarations compound_statement

    "function"   shift, and go to state 11
    "procedure"  shift, and go to state 12

    $default  reduce using rule 10 (subprogram_declarations)

    subprogram_declarations  go to state 13
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


state 9

    3 declarations: type . identifier_list ';' declarations

    ID  shift, and go to state 16

    identifier_list  go to state 17


state 10

    6 type: standard_type .
    7     | standard_type . '[' Integer ']'

    '['  shift, and go to state 18

    $default  reduce using rule 6 (type)


state 11

   13 subprogram_head: "function" . ID arguments ':' standard_type ';'

    ID  shift, and go to state 19


state 12

   14 subprogram_head: "procedure" . ID arguments ';'

    ID  shift, and go to state 20


state 13

    1 program: "mainprog" ID ';' declarations subprogram_declarations . compound_statement

    "begin"  shift, and go to state 21

    compound_statement  go to state 22


state 14

   11 subprogram_declarations: subprogram_declaration . subprogram_declarations

    "function"   shift, and go to state 11
    "procedure"  shift, and go to state 12

    $default  reduce using rule 10 (subprogram_declarations)

    subprogram_declarations  go to state 23
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


state 15

   12 subprogram_declaration: subprogram_head . declarations compound_statement

    "int"    shift, and go to state 6
    "float"  shift, and go to state 7

    $default  reduce using rule 2 (declarations)

    declarations   go to state 24
    type           go to state 9
    standard_type  go to state 10


state 16

    4 identifier_list: ID .
    5                | ID . ',' identifier_list

    ','  shift, and go to state 25

    $default  reduce using rule 4 (identifier_list)


state 17

    3 declarations: type identifier_list . ';' declarations

    ';'  shift, and go to state 26


state 18

    7 type: standard_type '[' . Integer ']'

    Integer  shift, and go to state 27


state 19

   13 subprogram_head: "function" ID . arguments ':' standard_type ';'

    '('  shift, and go to state 28

    $default  reduce using rule 15 (arguments)

    arguments  go to state 29


state 20

   14 subprogram_head: "procedure" ID . arguments ';'

    '('  shift, and go to state 28

    $default  reduce using rule 15 (arguments)

    arguments  go to state 30


state 21

   19 compound_statement: "begin" . statement_list "end"

    ID        shift, and go to state 31
    "begin"   shift, and go to state 21
    "return"  shift, and go to state 32
    "nop"     shift, and go to state 33
    "if"      shift, and go to state 34
    "while"   shift, and go to state 35
    "for"     shift, and go to state 36
    "print"   shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 39
    statement            go to state 40
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 22

    1 program: "mainprog" ID ';' declarations subprogram_declarations compound_statement .

    $default  reduce using rule 1 (program)


state 23

   11 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 11 (subprogram_declarations)


state 24

   12 subprogram_declaration: subprogram_head declarations . compound_statement

    "begin"  shift, and go to state 21

    compound_statement  go to state 47


state 25

    5 identifier_list: ID ',' . identifier_list

    ID  shift, and go to state 16

    identifier_list  go to state 48


state 26

    3 declarations: type identifier_list ';' . declarations

    "int"    shift, and go to state 6
    "float"  shift, and go to state 7

    $default  reduce using rule 2 (declarations)

    declarations   go to state 49
    type           go to state 9
    standard_type  go to state 10


state 27

    7 type: standard_type '[' Integer . ']'

    ']'  shift, and go to state 50


state 28

   16 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 16

    identifier_list  go to state 51
    parameter_list   go to state 52


state 29

   13 subprogram_head: "function" ID arguments . ':' standard_type ';'

    ':'  shift, and go to state 53


state 30

   14 subprogram_head: "procedure" ID arguments . ';'

    ';'  shift, and go to state 54


state 31

   42 variable: ID .
   43         | ID . '[' expression ']'
   44 procedure_statement: ID . '(' actual_parameter_expression ')'

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    $default  reduce using rule 42 (variable)


state 32

   29 statement: "return" . expression

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 64
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 33

   30 statement: "nop" .

    $default  reduce using rule 30 (statement)


state 34

   31 if_statement: "if" . expression ':' statement elif_statement

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 69
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 35

   36 while_statement: "while" . expression ':' statement
   37                | "while" . expression ':' statement else_statement

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 70
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 36

   38 for_statement: "for" . expression "in" expression ':' statement
   39              | "for" . expression "in" expression ':' statement else_statement

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 71
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 37

   40 print_statement: "print" .
   41                | "print" . '(' expression ')'

    '('  shift, and go to state 72

    $default  reduce using rule 40 (print_statement)


state 38

   25 statement: compound_statement .

    $default  reduce using rule 25 (statement)


state 39

   19 compound_statement: "begin" statement_list . "end"

    "end"  shift, and go to state 73


state 40

   20 statement_list: statement .
   21               | statement . ';' statement_list

    ';'  shift, and go to state 74

    $default  reduce using rule 20 (statement_list)


state 41

   26 statement: if_statement .

    $default  reduce using rule 26 (statement)


state 42

   27 statement: while_statement .

    $default  reduce using rule 27 (statement)


state 43

   28 statement: for_statement .

    $default  reduce using rule 28 (statement)


state 44

   23 statement: print_statement .

    $default  reduce using rule 23 (statement)


state 45

   22 statement: variable . '=' expression

    '='  shift, and go to state 75


state 46

   24 statement: procedure_statement .

    $default  reduce using rule 24 (statement)


state 47

   12 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 12 (subprogram_declaration)


state 48

    5 identifier_list: ID ',' identifier_list .

    $default  reduce using rule 5 (identifier_list)


state 49

    3 declarations: type identifier_list ';' declarations .

    $default  reduce using rule 3 (declarations)


state 50

    7 type: standard_type '[' Integer ']' .

    $default  reduce using rule 7 (type)


state 51

   17 parameter_list: identifier_list . ':' type
   18               | identifier_list . ':' type ';' parameter_list

    ':'  shift, and go to state 76


state 52

   16 arguments: '(' parameter_list . ')'

    ')'  shift, and go to state 77


state 53

   13 subprogram_head: "function" ID arguments ':' . standard_type ';'

    "int"    shift, and go to state 6
    "float"  shift, and go to state 7

    standard_type  go to state 78


state 54

   14 subprogram_head: "procedure" ID arguments ';' .

    $default  reduce using rule 14 (subprogram_head)


state 55

   43 variable: ID '[' . expression ']'

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 79
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 56

   44 procedure_statement: ID '(' . actual_parameter_expression ')'

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    $default  reduce using rule 45 (actual_parameter_expression)

    variable                     go to state 62
    procedure_statement          go to state 63
    actual_parameter_expression  go to state 80
    expression_list              go to state 81
    expression                   go to state 82
    simple_expression            go to state 65
    term                         go to state 66
    factor                       go to state 67
    sign                         go to state 68


state 57

   54 factor: Integer .

    $default  reduce using rule 54 (factor)


state 58

   55 factor: Float .

    $default  reduce using rule 55 (factor)


state 59

   60 sign: '+' .

    $default  reduce using rule 60 (sign)


state 60

   61 sign: '-' .

    $default  reduce using rule 61 (sign)


state 61

   58 factor: '!' . factor

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    factor               go to state 83
    sign                 go to state 68


state 62

   56 factor: variable .

    $default  reduce using rule 56 (factor)


state 63

   57 factor: procedure_statement .

    $default  reduce using rule 57 (factor)


state 64

   29 statement: "return" expression .

    $default  reduce using rule 29 (statement)


state 65

   49 expression: simple_expression . relop simple_expression

    '>'   shift, and go to state 84
    ">="  shift, and go to state 85
    '<'   shift, and go to state 86
    "<="  shift, and go to state 87
    "=="  shift, and go to state 88
    "!="  shift, and go to state 89
    "in"  shift, and go to state 90

    relop  go to state 91


state 66

   50 simple_expression: term .
   51                  | term . addop simple_expression

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 50 (simple_expression)

    addop  go to state 94


state 67

   52 term: factor .
   53     | factor . multop term

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96

    $default  reduce using rule 52 (term)

    multop  go to state 97


state 68

   59 factor: sign . factor

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    factor               go to state 98
    sign                 go to state 68


state 69

   31 if_statement: "if" expression . ':' statement elif_statement

    ':'  shift, and go to state 99


state 70

   36 while_statement: "while" expression . ':' statement
   37                | "while" expression . ':' statement else_statement

    ':'  shift, and go to state 100


state 71

   38 for_statement: "for" expression . "in" expression ':' statement
   39              | "for" expression . "in" expression ':' statement else_statement

    "in"  shift, and go to state 101


state 72

   41 print_statement: "print" '(' . expression ')'

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 102
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 73

   19 compound_statement: "begin" statement_list "end" .

    $default  reduce using rule 19 (compound_statement)


state 74

   21 statement_list: statement ';' . statement_list

    ID        shift, and go to state 31
    "begin"   shift, and go to state 21
    "return"  shift, and go to state 32
    "nop"     shift, and go to state 33
    "if"      shift, and go to state 34
    "while"   shift, and go to state 35
    "for"     shift, and go to state 36
    "print"   shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 103
    statement            go to state 40
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 75

   22 statement: variable '=' . expression

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 104
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 76

   17 parameter_list: identifier_list ':' . type
   18               | identifier_list ':' . type ';' parameter_list

    "int"    shift, and go to state 6
    "float"  shift, and go to state 7

    type           go to state 105
    standard_type  go to state 10


state 77

   16 arguments: '(' parameter_list ')' .

    $default  reduce using rule 16 (arguments)


state 78

   13 subprogram_head: "function" ID arguments ':' standard_type . ';'

    ';'  shift, and go to state 106


state 79

   43 variable: ID '[' expression . ']'

    ']'  shift, and go to state 107


state 80

   44 procedure_statement: ID '(' actual_parameter_expression . ')'

    ')'  shift, and go to state 108


state 81

   46 actual_parameter_expression: expression_list .

    $default  reduce using rule 46 (actual_parameter_expression)


state 82

   47 expression_list: expression .
   48                | expression . ',' expression_list

    ','  shift, and go to state 109

    $default  reduce using rule 47 (expression_list)


state 83

   58 factor: '!' factor .

    $default  reduce using rule 58 (factor)


state 84

   62 relop: '>' .

    $default  reduce using rule 62 (relop)


state 85

   63 relop: ">=" .

    $default  reduce using rule 63 (relop)


state 86

   64 relop: '<' .

    $default  reduce using rule 64 (relop)


state 87

   65 relop: "<=" .

    $default  reduce using rule 65 (relop)


state 88

   66 relop: "==" .

    $default  reduce using rule 66 (relop)


state 89

   67 relop: "!=" .

    $default  reduce using rule 67 (relop)


state 90

   68 relop: "in" .

    $default  reduce using rule 68 (relop)


state 91

   49 expression: simple_expression relop . simple_expression

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    simple_expression    go to state 110
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 92

   69 addop: '+' .

    $default  reduce using rule 69 (addop)


state 93

   70 addop: '-' .

    $default  reduce using rule 70 (addop)


state 94

   51 simple_expression: term addop . simple_expression

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    simple_expression    go to state 111
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 95

   71 multop: '*' .

    $default  reduce using rule 71 (multop)


state 96

   72 multop: '/' .

    $default  reduce using rule 72 (multop)


state 97

   53 term: factor multop . term

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    term                 go to state 112
    factor               go to state 67
    sign                 go to state 68


state 98

   59 factor: sign factor .

    $default  reduce using rule 59 (factor)


state 99

   31 if_statement: "if" expression ':' . statement elif_statement

    ID        shift, and go to state 31
    "begin"   shift, and go to state 21
    "return"  shift, and go to state 32
    "nop"     shift, and go to state 33
    "if"      shift, and go to state 34
    "while"   shift, and go to state 35
    "for"     shift, and go to state 36
    "print"   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 113
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 100

   36 while_statement: "while" expression ':' . statement
   37                | "while" expression ':' . statement else_statement

    ID        shift, and go to state 31
    "begin"   shift, and go to state 21
    "return"  shift, and go to state 32
    "nop"     shift, and go to state 33
    "if"      shift, and go to state 34
    "while"   shift, and go to state 35
    "for"     shift, and go to state 36
    "print"   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 114
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 101

   38 for_statement: "for" expression "in" . expression ':' statement
   39              | "for" expression "in" . expression ':' statement else_statement

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 115
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 102

   41 print_statement: "print" '(' expression . ')'

    ')'  shift, and go to state 116


state 103

   21 statement_list: statement ';' statement_list .

    $default  reduce using rule 21 (statement_list)


state 104

   22 statement: variable '=' expression .

    $default  reduce using rule 22 (statement)


state 105

   17 parameter_list: identifier_list ':' type .
   18               | identifier_list ':' type . ';' parameter_list

    ';'  shift, and go to state 117

    $default  reduce using rule 17 (parameter_list)


state 106

   13 subprogram_head: "function" ID arguments ':' standard_type ';' .

    $default  reduce using rule 13 (subprogram_head)


state 107

   43 variable: ID '[' expression ']' .

    $default  reduce using rule 43 (variable)


state 108

   44 procedure_statement: ID '(' actual_parameter_expression ')' .

    $default  reduce using rule 44 (procedure_statement)


state 109

   48 expression_list: expression ',' . expression_list

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression_list      go to state 118
    expression           go to state 82
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 110

   49 expression: simple_expression relop simple_expression .

    $default  reduce using rule 49 (expression)


state 111

   51 simple_expression: term addop simple_expression .

    $default  reduce using rule 51 (simple_expression)


state 112

   53 term: factor multop term .

    $default  reduce using rule 53 (term)


state 113

   31 if_statement: "if" expression ':' statement . elif_statement

    "elif"  shift, and go to state 119
    "else"  shift, and go to state 120

    $default  reduce using rule 32 (elif_statement)

    elif_statement  go to state 121
    else_statement  go to state 122


state 114

   36 while_statement: "while" expression ':' statement .
   37                | "while" expression ':' statement . else_statement

    "else"  shift, and go to state 120

    $default  reduce using rule 36 (while_statement)

    else_statement  go to state 123


state 115

   38 for_statement: "for" expression "in" expression . ':' statement
   39              | "for" expression "in" expression . ':' statement else_statement

    ':'  shift, and go to state 124


state 116

   41 print_statement: "print" '(' expression ')' .

    $default  reduce using rule 41 (print_statement)


state 117

   18 parameter_list: identifier_list ':' type ';' . parameter_list

    ID  shift, and go to state 16

    identifier_list  go to state 51
    parameter_list   go to state 125


state 118

   48 expression_list: expression ',' expression_list .

    $default  reduce using rule 48 (expression_list)


state 119

   34 elif_statement: "elif" . expression ':' statement elif_statement

    Integer  shift, and go to state 57
    Float    shift, and go to state 58
    ID       shift, and go to state 31
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '!'      shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 126
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


state 120

   35 else_statement: "else" . ':' statement

    ':'  shift, and go to state 127


state 121

   31 if_statement: "if" expression ':' statement elif_statement .

    $default  reduce using rule 31 (if_statement)


state 122

   33 elif_statement: else_statement .

    $default  reduce using rule 33 (elif_statement)


state 123

   37 while_statement: "while" expression ':' statement else_statement .

    $default  reduce using rule 37 (while_statement)


state 124

   38 for_statement: "for" expression "in" expression ':' . statement
   39              | "for" expression "in" expression ':' . statement else_statement

    ID        shift, and go to state 31
    "begin"   shift, and go to state 21
    "return"  shift, and go to state 32
    "nop"     shift, and go to state 33
    "if"      shift, and go to state 34
    "while"   shift, and go to state 35
    "for"     shift, and go to state 36
    "print"   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 128
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 125

   18 parameter_list: identifier_list ':' type ';' parameter_list .

    $default  reduce using rule 18 (parameter_list)


state 126

   34 elif_statement: "elif" expression . ':' statement elif_statement

    ':'  shift, and go to state 129


state 127

   35 else_statement: "else" ':' . statement

    ID        shift, and go to state 31
    "begin"   shift, and go to state 21
    "return"  shift, and go to state 32
    "nop"     shift, and go to state 33
    "if"      shift, and go to state 34
    "while"   shift, and go to state 35
    "for"     shift, and go to state 36
    "print"   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 130
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 128

   38 for_statement: "for" expression "in" expression ':' statement .
   39              | "for" expression "in" expression ':' statement . else_statement

    "else"  shift, and go to state 120

    $default  reduce using rule 38 (for_statement)

    else_statement  go to state 131


state 129

   34 elif_statement: "elif" expression ':' . statement elif_statement

    ID        shift, and go to state 31
    "begin"   shift, and go to state 21
    "return"  shift, and go to state 32
    "nop"     shift, and go to state 33
    "if"      shift, and go to state 34
    "while"   shift, and go to state 35
    "for"     shift, and go to state 36
    "print"   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 132
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 130

   35 else_statement: "else" ':' statement .

    $default  reduce using rule 35 (else_statement)


state 131

   39 for_statement: "for" expression "in" expression ':' statement else_statement .

    $default  reduce using rule 39 (for_statement)


state 132

   34 elif_statement: "elif" expression ':' statement . elif_statement

    "elif"  shift, and go to state 119
    "else"  shift, and go to state 120

    $default  reduce using rule 32 (elif_statement)

    elif_statement  go to state 133
    else_statement  go to state 122


state 133

   34 elif_statement: "elif" expression ':' statement elif_statement .

    $default  reduce using rule 34 (elif_statement)
